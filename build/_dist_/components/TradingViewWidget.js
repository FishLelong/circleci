/* src/components/TradingViewWidget.svelte generated by Svelte v3.29.0 */
import {
	SvelteComponent,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	toggle_class
} from "../../web_modules/svelte/internal.js";

import { onMount } from "../../web_modules/svelte.js";

function create_fragment(ctx) {
	let div;

	return {
		c() {
			div = element("div");
			attr(div, "id", /*CONTAINER_ID*/ ctx[0]);
			toggle_class(div, "autosize", /*autosize*/ ctx[1]);
		},
		m(target, anchor) {
			insert(target, div, anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*CONTAINER_ID*/ 1) {
				attr(div, "id", /*CONTAINER_ID*/ ctx[0]);
			}

			if (dirty & /*autosize*/ 2) {
				toggle_class(div, "autosize", /*autosize*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

const SCRIPT_ID = "tradingview-widget-script";

function instance($$self, $$props, $$invalidate) {
	let { options = Object } = $$props;
	let widget = null;

	onMount(() => {
		appendScript(initWidget);
	});

	const initWidget = (opts = {}) => {
		if (widget) {
			widget.options.symbol = opts.symbol;
			widget.reload();
			return;
		}

		if (typeof TradingView !== "undefined") {
			const container_id = CONTAINER_ID;
			widget = new window.TradingView.widget({ container_id, ...opts });
		}
	};

	function appendScript(onload) {
		if (document.getElementById(SCRIPT_ID) === null) {
			const script = document.createElement("script");
			script.id = SCRIPT_ID;
			script.type = "text/javascript";
			script.async = true;
			script.src = "https://s3.tradingview.com/tv.js";
			script.onload = () => onload(options);
			document.getElementsByTagName("head")[0].appendChild(script);
		} else {
			const script = document.getElementById(SCRIPT_ID);
			const oldOnload = script.onload;

			return script.onload = () => {
				oldOnload();
				onload();
			};
		}
	}

	$$self.$$set = $$props => {
		if ("options" in $$props) $$invalidate(2, options = $$props.options);
	};

	let CONTAINER_ID;
	let autosize;

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*options*/ 4) {
			$: $$invalidate(0, CONTAINER_ID = options && options.container_id
			? options.container_id
			: "svelte-tradingview-widget;");
		}

		if ($$self.$$.dirty & /*options*/ 4) {
			$: $$invalidate(1, autosize = options.autosize);
		}
	};

	return [CONTAINER_ID, autosize, options, initWidget];
}

class TradingViewWidget extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { options: 2, initWidget: 3 });
	}

	get initWidget() {
		return this.$$.ctx[3];
	}
}

export default TradingViewWidget;